:github_url: hide

.. Generated automatically by doc/tools/make_rst.py in Godot's source tree.
.. DO NOT EDIT THIS FILE, but the Navigation.xml source instead.
.. The source is found in doc/classes or modules/<name>/doc_classes.

.. _class_Navigation:

Navigation
==========

**Inherits:** :ref:`Spatial<class_Spatial>` **<** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

Mesh-based navigation and pathfinding node.

Description
-----------

Provides navigation and pathfinding within a collection of :ref:`NavigationMesh<class_NavigationMesh>`\ es. By default, these will be automatically collected from child :ref:`NavigationMeshInstance<class_NavigationMeshInstance>` nodes. In addition to basic pathfinding, this class also assists with aligning navigation agents with the meshes they are navigating on.

Tutorials
---------

- `3D Navmesh Demo <https://godotengine.org/asset-library/asset/124>`__

Properties
----------

+-------------------------------+---------------------------------------------------------------------------------+------------------------+
| :ref:`float<class_float>`     | :ref:`cell_height<class_Navigation_property_cell_height>`                       | ``0.2``                |
+-------------------------------+---------------------------------------------------------------------------------+------------------------+
| :ref:`float<class_float>`     | :ref:`cell_size<class_Navigation_property_cell_size>`                           | ``0.3``                |
+-------------------------------+---------------------------------------------------------------------------------+------------------------+
| :ref:`float<class_float>`     | :ref:`edge_connection_margin<class_Navigation_property_edge_connection_margin>` | ``5.0``                |
+-------------------------------+---------------------------------------------------------------------------------+------------------------+
| :ref:`Vector3<class_Vector3>` | :ref:`up_vector<class_Navigation_property_up_vector>`                           | ``Vector3( 0, 1, 0 )`` |
+-------------------------------+---------------------------------------------------------------------------------+------------------------+

Methods
-------

+-------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                   | :ref:`get_closest_point<class_Navigation_method_get_closest_point>` **(** :ref:`Vector3<class_Vector3>` to_point **)** |const|                                                                                                    |
+-------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                   | :ref:`get_closest_point_normal<class_Navigation_method_get_closest_point_normal>` **(** :ref:`Vector3<class_Vector3>` to_point **)** |const|                                                                                      |
+-------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                           | :ref:`get_closest_point_owner<class_Navigation_method_get_closest_point_owner>` **(** :ref:`Vector3<class_Vector3>` to_point **)** |const|                                                                                        |
+-------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                   | :ref:`get_closest_point_to_segment<class_Navigation_method_get_closest_point_to_segment>` **(** :ref:`Vector3<class_Vector3>` start, :ref:`Vector3<class_Vector3>` end, :ref:`bool<class_bool>` use_collision=false **)** |const| |
+-------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                           | :ref:`get_rid<class_Navigation_method_get_rid>` **(** **)** |const|                                                                                                                                                               |
+-------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PoolVector3Array<class_PoolVector3Array>` | :ref:`get_simple_path<class_Navigation_method_get_simple_path>` **(** :ref:`Vector3<class_Vector3>` start, :ref:`Vector3<class_Vector3>` end, :ref:`bool<class_bool>` optimize=true **)** |const|                                 |
+-------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Property Descriptions
---------------------

.. _class_Navigation_property_cell_height:

- :ref:`float<class_float>` **cell_height**

+-----------+------------------------+
| *Default* | ``0.2``                |
+-----------+------------------------+
| *Setter*  | set_cell_height(value) |
+-----------+------------------------+
| *Getter*  | get_cell_height()      |
+-----------+------------------------+

The cell height to use for fields.

----

.. _class_Navigation_property_cell_size:

- :ref:`float<class_float>` **cell_size**

+-----------+----------------------+
| *Default* | ``0.3``              |
+-----------+----------------------+
| *Setter*  | set_cell_size(value) |
+-----------+----------------------+
| *Getter*  | get_cell_size()      |
+-----------+----------------------+

The XZ plane cell size to use for fields.

----

.. _class_Navigation_property_edge_connection_margin:

- :ref:`float<class_float>` **edge_connection_margin**

+-----------+-----------------------------------+
| *Default* | ``5.0``                           |
+-----------+-----------------------------------+
| *Setter*  | set_edge_connection_margin(value) |
+-----------+-----------------------------------+
| *Getter*  | get_edge_connection_margin()      |
+-----------+-----------------------------------+

This value is used to detect the near edges to connect compatible regions.

----

.. _class_Navigation_property_up_vector:

- :ref:`Vector3<class_Vector3>` **up_vector**

+-----------+------------------------+
| *Default* | ``Vector3( 0, 1, 0 )`` |
+-----------+------------------------+
| *Setter*  | set_up_vector(value)   |
+-----------+------------------------+
| *Getter*  | get_up_vector()        |
+-----------+------------------------+

Defines which direction is up. By default, this is ``(0, 1, 0)``, which is the world's "up" direction.

Method Descriptions
-------------------

.. _class_Navigation_method_get_closest_point:

- :ref:`Vector3<class_Vector3>` **get_closest_point** **(** :ref:`Vector3<class_Vector3>` to_point **)** |const|

Returns the navigation point closest to the point given. Points are in local coordinate space.

----

.. _class_Navigation_method_get_closest_point_normal:

- :ref:`Vector3<class_Vector3>` **get_closest_point_normal** **(** :ref:`Vector3<class_Vector3>` to_point **)** |const|

Returns the surface normal at the navigation point closest to the point given. Useful for rotating a navigation agent according to the navigation mesh it moves on.

----

.. _class_Navigation_method_get_closest_point_owner:

- :ref:`RID<class_RID>` **get_closest_point_owner** **(** :ref:`Vector3<class_Vector3>` to_point **)** |const|

Returns the owner of the :ref:`NavigationMesh<class_NavigationMesh>` which contains the navigation point closest to the point given. This is usually a :ref:`NavigationMeshInstance<class_NavigationMeshInstance>`.

----

.. _class_Navigation_method_get_closest_point_to_segment:

- :ref:`Vector3<class_Vector3>` **get_closest_point_to_segment** **(** :ref:`Vector3<class_Vector3>` start, :ref:`Vector3<class_Vector3>` end, :ref:`bool<class_bool>` use_collision=false **)** |const|

Returns the navigation point closest to the given line segment. When enabling ``use_collision``, only considers intersection points between segment and navigation meshes. If multiple intersection points are found, the one closest to the segment start point is returned.

----

.. _class_Navigation_method_get_rid:

- :ref:`RID<class_RID>` **get_rid** **(** **)** |const|

Returns the object's :ref:`RID<class_RID>`.

----

.. _class_Navigation_method_get_simple_path:

- :ref:`PoolVector3Array<class_PoolVector3Array>` **get_simple_path** **(** :ref:`Vector3<class_Vector3>` start, :ref:`Vector3<class_Vector3>` end, :ref:`bool<class_bool>` optimize=true **)** |const|

Returns the path between two given points. Points are in local coordinate space. If ``optimize`` is ``true`` (the default), the agent properties associated with each :ref:`NavigationMesh<class_NavigationMesh>` (radius, height, etc.) are considered in the path calculation, otherwise they are ignored.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
